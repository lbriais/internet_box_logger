#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'
require 'internet_box_logger'
require 'tasks/internet_box_logger_tasks'

module InternetBoxLogger
  class Script
    include EasyAppHelper

    APP_NAME = 'The Internet Box Logger'
    DESCRIPTION = 'This application will log your Internet box metrics into ElasticSearch.'

    def initialize
      # Providing this data is optional but brings better logging and online help
      config.describes_application(app_name: APP_NAME, app_version: InternetBoxLogger::VERSION, app_description: DESCRIPTION)
    end

    def run
      add_cmd_line_options
      if config[:help]
        puts config.help
        exit 0
      end
      begin
        if config[:cron_setup] && config[:cron_remove]
          msg =  'Incompatible options cron_setup and cron_remove'
          raise msg
        end
        if config[:cron_setup]
          self.extend InternetBoxLogger::Tasks
          self.extend InternetBoxLogger::Tasks::Cron
          cron_setup
          exit 0
        end
        if config[:cron_remove]
          self.extend InternetBoxLogger::Tasks
          self.extend InternetBoxLogger::Tasks::Cron
          cron_remove
          exit 0
        end
        if config[:serve]
          self.extend InternetBoxLogger::Tasks
          self.extend InternetBoxLogger::Tasks::Kibana
          kibana_info
          serve_ui
        else
          puts_and_logs 'Application is starting'
          log_box_information
        end
      rescue => e
        puts "Program aborted with message: #{e.message}"
        logger.fatal "#{e.message}\nBacktrace:\n#{e.backtrace.join("\n\t")}" if config[:debug]
      end


    end

    def add_cmd_line_options
      config.add_command_line_section do |slop|
        slop.on :serve, 'Runs a simple web server to serve Kibana UI', argument: false
        slop.on :server_port, 'Specify server port if you use the "--serve" option', argument: true, as: Integer
        slop.on :cron_setup, 'Setup the Cron task', argument: false
        slop.on :cron_interval, 'Specify the interval at which the measurements will be done', argument: true, as: Integer
        slop.on :cron_remove, 'Remove the Cron task', argument: false
      end
    end

    def log_box_information
      InternetBoxLogger.get_box.log_box_info
    end

  end
end

InternetBoxLogger::Script.new.run
